<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_MAA_States" Id="{1d2c1fdc-c4a6-489b-bb2f-4fd69cc8242c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MAA_States EXTENDS FB_PositionStateBase_WithPMPS
VAR_INPUT
    {attribute 'pytmc' := '
        pv: SET;
        io: io;
		field: ZRST Unknown;
	    field: ONST 5.5mm;
	    field: TWST 8mm;
	    field: THST 10mm;
	    field: FRST 12mm;
    '}
    enumSet: E_MAA_states;
    bStatesLock: BOOL;
	stAprt1: DUT_PositionState;
	stAprt2: DUT_PositionState;
	stAprt3: DUT_PositionState;
	stAprt4: DUT_PositionState;
END_VAR
VAR_OUTPUT
    {attribute 'pytmc' := '
        pv: GET
        io: i
		field: ZRST Unknown;
	    field: ONST 5.5mm;
	    field: TWST 8mm;
	    field: THST 10mm;
	    field: FRST 12mm;
    '}
    enumGet: E_MAA_States;	
END_VAR
VAR
    bStatesInit: BOOL := TRUE;
	fDelta1: LREAL := 2.5; //only for commissioning should change to more conservative values
	fDelta2: LREAL := 4;
	fDelta3: LREAL := 5;
	fDelta4: LREAL := 6;
END_VAR
VAR CONSTANT
    fVelocity: LREAL := 5;
    fAccel: LREAL := 200;
    fDecel: LREAL := 25;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bStatesInit THEN
    bStatesInit := FALSE;
	
	stAprt1.sName := '5.5mm';
    stAprt1.fVelocity := fVelocity;
    stAprt1.fDelta := fDelta1;
    stAprt1.fAccel := fAccel;
    stAprt1.fDecel := fAccel;
    stAprt1.bMoveOk := TRUE;
	
	stAprt2.sName := '8mm';
    stAprt2.fVelocity := fVelocity;
    stAprt2.fDelta := fDelta2;
    stAprt2.fAccel := fAccel;
    stAprt2.fDecel := fAccel;
    stAprt2.bMoveOk := TRUE;
	
	stAprt3.sName := '10mm';
    stAprt3.fVelocity := fVelocity;
    stAprt3.fDelta := fDelta3;
    stAprt3.fAccel := fAccel;
    stAprt3.fDecel := fAccel;
    stAprt3.bMoveOk := TRUE;
	
	stAprt4.sName := '12mm';
    stAprt4.fVelocity := fVelocity;
    stAprt4.fDelta := fDelta4;
    stAprt4.fAccel := fAccel;
    stAprt4.fDecel := fAccel;
    stAprt4.bMoveOk := TRUE;
	
	
	
	arrStates[1] := stAprt1;
    arrStates[2] := stAprt2;
    arrStates[3] := stAprt3;
    arrStates[4] := stAprt4;
END_IF


setState := enumSet;
Exec();
enumGet := getState;
enumSet := setState;

]]></ST>
    </Implementation>
    <LineIds Name="FB_MAA_States">
      <LineId Id="3" Count="1" />
      <LineId Id="260" Count="0" />
      <LineId Id="264" Count="4" />
      <LineId Id="261" Count="1" />
      <LineId Id="270" Count="5" />
      <LineId Id="284" Count="5" />
      <LineId Id="277" Count="0" />
      <LineId Id="292" Count="0" />
      <LineId Id="294" Count="4" />
      <LineId Id="293" Count="0" />
      <LineId Id="290" Count="1" />
      <LineId Id="269" Count="0" />
      <LineId Id="257" Count="2" />
      <LineId Id="256" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="251" Count="3" />
      <LineId Id="245" Count="1" />
      <LineId Id="242" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>